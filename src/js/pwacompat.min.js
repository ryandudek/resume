(function() {
    function l() {
        const a = document.head.querySelector('link[rel="manifest"]'); const b = a ? a.href : ''; Promise.resolve().then(() => {
            if (!b) {
                throw 'can\'t find <link rel="manifest" href=".." />\'';
            }

            return window.fetch(b);
        }).then((a) => a.json()).then((a) => n(a, b)).catch((a) => console.warn('pwacompat.js error', a));
    } function p(a, b) {
        a = document.createElement(a); for (const c in b) {
            a.setAttribute(c, b[c]);
        }document.head.appendChild(a);

        return a;
    } function h(a, b) {
        b && (!0 === b && (b = 'yes'),
        p('meta', { name: a,
            content: b }));
    } function n(a, b) {
        function c(e, c, b) {
            let d = e.width; let g = e.height; let f = window.devicePixelRatio; e = q({ width: d * f,
                height: g * f }); e.scale(f, f); e.fillStyle = a.background_color || '#f8f9fa'; e.fillRect(0, 0, d, g); e.translate(d / 2, (g - 32) / 2); e.font = '24px HelveticaNeue-CondensedBold'; e.fillStyle = l ? 'white' : 'black'; d = e.measureText(r).width; b && (g = b.width / f, f = b.height / f, f > 128 && (g /= f / 128, f = 128), g >= 48 && f >= 48 && (e.drawImage(b, g / -2, f / -2, g, f), e.translate(0, f / 2 + 32))); e.fillText(r, d / -2, 0); b = document.createElement('link');
            b.setAttribute('rel', 'apple-touch-startup-image'); b.setAttribute('media', `(orientation: ${c})`); b.setAttribute('href', e.canvas.toDataURL());

            return b;
        } function d(a) {
            const b = c(window.screen, 'portrait', a); a = c({ width: window.screen.height,
                height: window.screen.width }, 'landscape', a); t.forEach((a) => a.remove()); document.head.appendChild(b); document.head.appendChild(a); t.add(b); t.add(a);
        } let k = a.icons || []; k.sort((a, b) => parseInt(b.sizes, 10) - parseInt(a.sizes, 10)); const u = k.map((a) => {
            a = { rel: 'icon',
                href: new URL(a.src, b),
                sizes: a.sizes }; p('link', a); if (v) {
                return a.rel = 'apple-touch-icon', p('link', a);
            }
        }); k = A.indexOf(a.display) !== -1; h('mobile-web-app-capable', k); B && (h('msapplication-starturl', a.start_url || '/'), h('msapplication-TileColor', a.theme_color)); if (v) {
            var l = w(a.background_color || '#f8f9fa'); const n = w(a.theme_color || 'black'); var r = a.name || a.short_name || document.title; const x = C(a.related_applications); x && h('apple-itunes-app', `app-id=${x}`); h('apple-mobile-web-app-status-bar-style', n ? 'default' : 'black');
            h('apple-mobile-web-app-capable', k); h('apple-mobile-web-app-title', r); var t = new Set(); d(null); if (u.length) {
                const y = u[0]; const m = new Image(); m.onload = function() {
                    d(m); if (a.background_color) {
                        const b = z(m, a.background_color); b !== null && (y.href = b, u.slice(1).forEach((b) => {
                            const c = new Image(); c.onload = function() {
                                const d = z(c, a.background_color, !0); b.href = d;
                            }; c.src = b.href;
                        }));
                    }
                }; m.src = y.href;
            }
        }
    } function C(a) {
        let b; (a || []).filter((a) => a.platform === 'itunes').forEach((a) => {
            a.id ? b = a.id : (a = a.url.match(/id(\d+)/)) && (b = a[1]);
        });

        return b;
    } function w(a) {
        const b = q(); b.fillStyle = a; b.fillRect(0, 0, 1, 1); a = b.getImageData(0, 0, 1, 1).data.map((a) => {
            a /= 255;

            return a < 0.03928 ? a / 12.92 : Math.pow((a + 0.055) / 1.055, 2.4);
        });

        return Math.abs(1.05 / (0.2126 * a[0] + 0.7152 * a[1] + 0.0722 * a[2] + 0.05)) > 3;
    } function z(a, b, c) {
        c = void 0 === c ? !1 : c; const d = q(a); d.drawImage(a, 0, 0); if (!c && d.getImageData(0, 0, 1, 1).data[3] == 255) {
            return null;
        } d.globalCompositeOperation = 'destination-over'; d.fillStyle = b; d.fillRect(0, 0, a.width, a.height);

        return d.canvas.toDataURL();
    } function q(a) {
        a = void 0 === a ? { width: 1,
            height: 1 } : a; const b = a.height; const c = document.createElement('canvas'); c.width = a.width; c.height = b;

        return c.getContext('2d');
    } if ('fetch' in window) {
        document.readyState === 'complete' ? l() : window.addEventListener('load', l); var A = ['standalone', 'fullscreen', 'minimal-ui']; var v = navigator.vendor && navigator.vendor.indexOf('Apple') !== -1; var B = navigator.userAgent && navigator.userAgent.indexOf('Edge') !== -1;
    }
}());
